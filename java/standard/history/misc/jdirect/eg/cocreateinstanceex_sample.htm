<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>CoCreateInstanceEx Sample</TITLE>
<style>@import url(../../misc/jsdk_ie4.css);</style>
<link disabled rel="stylesheet" href="../../misc/jsdk_ie3.css">
<META NAME="ROBOTS" CONTENT="NOINDEX"></HEAD>
<BODY>

<H1><A NAME="cocreateinstanceex_sample"></A><SUP></SUP>CoCreateInstanceEx Sample</H1>

<P>This sample is located in <B>\Samples\Com\CCIEx</B>.</P>

<P class=indent><B>Note&nbsp;&nbsp;&nbsp;</B>It is recommended that you have Microsoft&#174; Visual C++&#174; version 5.0 or higher installed.</P>

<P><A HREF="#samples_cocreateinstanceex_description">Description</A><BR>
<A HREF="#samples_cocreateinstanceex_using_the_sample">Using the Sample</A><BR>
<A HREF="#samples_cocreateinstanceex_key_project_files">Key Project Files</A><BR>
<A HREF="#samples_cocreateinstanceex_technologies_demonstrated">Technologies Demonstrated</A></P>

<H2><A NAME="samples_cocreateinstanceex_description"></A>Description</H2>

<P>The CoCreateInstanceEx (CCIEx) sample uses a Java-implemented COM object through a custom interface to pass a string, array, and the client as a COM object. The interfaces are defined in IDL (Interface Definition Language), and used by the client and the server through the Java wrappers generated by jactivex. A Microsoft&#174; J/Direct&#153; call to CoCreateInstanceEx creates instances of the in-process COM object, forms a local server, and forms a remote client. </P>

<H2><A NAME="samples_cocreateinstanceex_using_the_sample"></A>Using the Sample</H2>

<P class=label><B>To compile the remote client</B></P>

<P>Edit <B>\Samples\Com\CCIEx\Sample\Dcom\RemoteClient.java</B> as follows:

<OL>
	<LI>Change
<PRE class="clsCode">public final String serverName = null;
</PRE>

<P class=tl>to the following:</P>
<PRE class="clsCode">public final String serverName=&lt;this machine name&gt;;
</PRE>
</LI>

	<LI>Change 
<PRE class="clsCode">public final String userName = null; 
</PRE>

<P class=tl>to the following:</P>
<PRE class="clsCode">public final String userName=&lt;the login name for the user that will be identified for security&gt;;
</PRE>
</LI>

	<LI>Change 
<PRE class="clsCode">public final String domainName = null; 
</PRE>

<P class=tl>to the following:</P>
<PRE class="clsCode">public final String domainName=&lt;domain that the user is from&gt;;
</PRE>
</LI>

	<LI>Change 
<PRE class="clsCode">public final String password = null; 
</PRE>

<P class=tl>to the following:</P>
<PRE class="clsCode">public final String password=&lt;password for the user on the specified domain&gt;;
</PRE>
</LI>

	<LI>Use Nmake.exe to compile the makefile in the <B>\Samples\Com\CCIEx</B> directory. Type the following command:
<P class=tl>Nmake</P></LI>
</OL>

<P class=label><B>To install the server sample</B></P>

<P>In <B>\Samples\Com\CCIEx</B>, run Register.bat. </P>

<P>This displays two dialog boxes indicating that the COM object and the proxy/stub were registered correctly. </P>

<P class=label><B>To install the client sample</B></P>

<P>In <B>\Samples\Com\CCIEx</B>, run Clientreg.bat. </P>

<P>This displays a message stating that the proxy/stub was registered correctly.</P>

<P class=label><B>To uninstall the server sample</B></P>

<P>In <B>\Samples\Com\CCIEx</B>, run Remove.bat. </P>

<P>This displays two messages stating that the COM object and the proxy/stub were removed correctly. </P>

<P class=label><B>To uninstall the client sample</B></P>

<P>In <B>\Samples\Com\CCIEx</B>, run Clientrem.bat. </P>

<P>This displays a message stating that the proxy/stub was removed correctly.</P>

<P class=label><B>To run the inproc sample</B></P>

<P>From <B>\Samples\Com\CCIEx</B>, run the following command:</P>

<P class=indent>jview sample.dcom.InprocClient </P>

<P>If successful, this displays the output from the COM object and the Client. The last message will be InprocClient - Done.</P>

<P class=label><B>To run the local server sample</B></P>

<P>From <B>\Samples\Com\CCIEx</B>, run the following command:</P>

<P class=indent>jview sample.dcom.OutprocClient</P>

<P>If successful, this displays the output from the COM object and the Client. The last message will be OutprocClient - Done.</P>

<P class=indent><B><B>Note&nbsp;&nbsp;&nbsp;</B></B>The local server case may fail with an RPC error (<B>HRESULT</B> = 800706BE).</P>

<P>This is because in Microsoft&#174; Windows NT&#174;, version 4, the main thread of Dllhost.exe waits for COM to tell it to shut down. COM signals a shutdown whenever the total proxy count in the process is 0 (zero). The Microsoft virtual machine cocreates an MDM process to ask if the object should be debugged and then immediately released. That triggers the proxy count to reach 0 (zero) and the process goes away in the middle of an otherwise successful run.</P>

<P>You can avoid the debug check by removing the <B>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Java VM\MSDEBUG</B> registry key that is automatically added by Visual J++. Note that VJ will continue to add this key each time VJ is run.</P>

<P>Changing the threading model for the Hub2 Java/COM object in the registry to ThreadingModel=Apartment makes this work, probably because you end up with a proxy out of an STA COM worker thread to one of the surrogate's MTA worker threads. With ThreadingModel=Both, you end up directly on the MTA worker thread and don't create a proxy.</P>

<P class=label><B>To run the remote client sample from the remote machine</B></P>

<P>From <B>\Samples\Com\CCIEx</B>, run the following command:</P>

<P class=indent>jview sample.dcom.RemoteClient</P>

<P>If successful, this displays the output from the COM object and the Client. The last message will be RemoteClient - Done.</P>

<H2><A NAME="samples_cocreateinstanceex_key_project_files"></A>Key Project Files</H2>
<A HREF="clientreg.bat">clientreg.bat</A>
<P>This batch file contains the client registration information for adding the Proxystub.dll file into the local registry. This is required for marshaling the custom interface on the Java/COM object.</P>
<A HREF="clientrem.bat">clientrem.bat</A>
<P>This batch file removes the Proxystub.dll file from the registry of the client registry.</P>
<A HREF="register.bat">register.bat</A>
<P>This batch file registers the Java/COM object and Proxystub.dll.</P>
<A HREF="sample/dcom/Hub2.java">Hub2.java</A>
<P>This class contains the implementation of the Java/COM object.</P>
<A HREF="sample/dcom/InprocClient.java">InprocClient.java</A>
<P>This class contains the implementation of the in-process client.</P>
<A HREF="sample/dcom/OutprocClient.java">OutprocClient.java</A>
<P>This class contains the implementation of the local-server client.</P>
<A HREF="sample/dcom/RemoteClient.java">RemoteClient.java</A>
<P>This class contains the implementation of a remote client.</P>

<H2><A NAME="samples_cocreateinstanceex_technologies_demonstrated"></A>Technologies Demonstrated</H2>

<H4>COM</H4>

<P>This sample shows how to:

<UL type=disc>
	<LI>Implement a Java/COM object with custom IDL-defined interfaces. <BR><BR></LI>

	<LI>Implement a Java client application that uses a J/Direct call to CoCreateInstanceEx to create an instance of the Java/COM object in-process and out-of-process.</LI>
</UL>

<H4>DCOM</H4>

<UL type=disc>
	<LI>This sample shows how to implement a Java client application that uses a J/Direct call to CoCreateInstanceEx to create an instance of a remote object, using DCOM.<BR><BR></LI>
</UL>
<P><CENTER>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="../../../cpyright.htm" target="_top">&#169; 1999 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT>
</CENTER>

</BODY>
</HTML>
